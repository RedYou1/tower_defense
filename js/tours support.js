let fac,farm,banane;

function getbananeindex(dart){
    for(let i = 0; i < bananes.length; i++){
        let b = bananes[i];
        if(dart.x === b.x && dart.y === b.y && dart.dir === b.dir && dart.s === b.s){
            return i;
        }
    }
    return -1;
}

function tourssupport(){
    let Banana_Farm = loadImage('sprites/Banana_Farm.png');
    banane = loadImage('sprites/banane.png');
    farm = new statictower("farm",50,70,100,60,Banana_Farm,1250,2,towertypes.support);
    farm.dart = new DartsContainer(5,null,20,banane,30,20,false,900);
    farm.dart.step = function(){
        if(this.j===undefined){this.j=0;}
        this.x+=cos(this.dir)*this.speed;
        this.y+=sin(this.dir)*this.speed;
        this.j++;
        if(this.j===this.d){
            this.step=function(){
                this.lives--;
                if(this.lives<=0){
                    bananes.splice(getbananeindex(this),1);
                }
            }
        }
        this.lives--;
        if(this.lives<=0){
            bananes.splice(getbananeindex(this),1);
        }
    }
    let up = [[],[],[]];
    let IncreasedProductionUpgradeIcon = loadImage('sprites/IncreasedProductionUpgradeIcon.png');
    let GreaterProductionUpgradeIcon = loadImage('sprites/GreaterProductionUpgradeIcon.png');
    let BananaPlantationUpgradeIcon = loadImage('sprites/BananaPlantationUpgradeIcon.png');
    let BananaResearchFacilityUpgradeIcon = loadImage('sprites/BananaResearchFacilityUpgradeIcon.png');
    let BananaCentralUpgradeIcon = loadImage('sprites/BananaCentralUpgradeIcon.png');
    let LongLifeBananasUpgradeIcon = loadImage('sprites/LongLifeBananasUpgradeIcon.png');
    let ValuableBananasUpgradeIcon = loadImage('sprites/ValuableBananasUpgradeIcon.png');
    let MonkeyBankUpgradeIcon = loadImage('sprites/MonkeyBankUpgradeIcon.png');
    let IMFLoanUpgradeIcon = loadImage('sprites/IMFLoanUpgradeIcon.png');
    let MonkeyNomicsUpgradeIcon = loadImage('sprites/MonkeyNomicsUpgradeIcon.png');
    up[0][0] = new Upgrade("Increased Production",IncreasedProductionUpgradeIcon,"Grows 2 extra Banana bunches per round.",500,function(mon){
        mon.max+=2;
    })
    up[0][1] = new Upgrade("Greater Production",GreaterProductionUpgradeIcon,"Grows 2 MORE extra Banana bunches per round.",600,function(mon){
        mon.max+=2;
    })
    up[0][2] = new Upgrade("Banana Plantation",BananaPlantationUpgradeIcon,"Grows 16 Banana bunches per round.",3000,function(mon){
        mon.max=16;
    })
    up[0][3] = new Upgrade("Banana Research Facility",BananaResearchFacilityUpgradeIcon,"Produces 5 large Banana crates every round worth $300 each. Each crate contains 15 Bananas.",19000,function(mon){
        mon.max=5;
        if(mon.next>mon.max){mon.next=mon.max;}
        mon.dart.dam*=15;
    })
    up[0][4] = new Upgrade("Banana Central",BananaCentralUpgradeIcon,"You want Banana? We have Banana!",100000,function(mon){
        mon.dart.dam*=4;
        let boo = new Boosts("Banana Central",function(bo){
            let to = towers[gettowerindex(bo.tower)];
            to.mons=[];
            towers.forEach(function(a){
                if(a.tower.name==="farm"&&a.levels[0]===4){
                    a.dart.dam*=1.25
                    to.mons.push(a);
                }
            })
        },function(bo){
            bo.tower().mons.forEach(function(a){
                a.dart.dam/=1.25
            })
        },mon)
        mon.bo = boo.name
        boosts.push(boo);
    })

    up[1][0] = new Upgrade("Long Life Bananas",LongLifeBananasUpgradeIcon,"Bananas last 30 seconds before rotting instead of 15.",300,function(mon){
        mon.dart.lives*=2;
    })
    up[1][1] = new Upgrade("Valuable Bananas",ValuableBananasUpgradeIcon,"Bananas are worth 25% more cash per bunch.",800,function(mon){
        mon.dart.dam*=1.25;
    })
    up[1][2] = new Upgrade("Monkey Bank",MonkeyBankUpgradeIcon,"All money generated by this farm is now stored in the bank and earns 15% interest every round.",3300,function(mon){
        mon.money = 0;
        mon.maxmoney=7000;
        mon.shoot = function(b){
            switch(this.max){
                case 4:
                    //230
                    this.money+=57.5;
                    break;
                case 6:
                    //270
                    this.money+=45;
                    break;
                case 8:
                    //310
                    this.money+=38.75;
                    break;
            }
            if(this.money>this.maxmoney){
                this.money=this.maxmoney;
            }
        }
        mon.step = function(){
            if(this.round<yourround&&this.next>0){
                for(let i =0; i < this.next;i++){
                    this.shoot();
                }
            }
            if(this.round<yourround){
                this.next=this.max;
                this.money*=1.15;
            }
            if(this.tempspeed >= this.speed) {
                if(this.next>0) {
                    this.shoot();
                    this.next--;
                    this.tempspeed -= this.speed;
                }
            } else {
                this.tempspeed++;
            }
            this.round = yourround;
        }
    })
    up[1][3] = new Upgrade("IMF Loan",IMFLoanUpgradeIcon,"IMF Loan ability: Gives you $10,000 but you have to pay it back over time.",7500,function(mon){
        mon.maxmoney=10000;
        let ab = new Ability("IMF Loan",IMFLoanUpgradeIcon,5400,1,function(){
            money+=10000;
            dept+=10000;
        },function(){

        })
        mon.ab=ab.name;
        abilities.push(ab);
    })
    up[1][4] = new Upgrade("Monkey-Nomics",MonkeyNomicsUpgradeIcon,"For when you're too big to fail...",100000,function(mon){
        removeabi("IMF Loan");
        let ab = new Ability("Monkey-Nomics",MonkeyNomicsUpgradeIcon,3600,1,function(){
            money+=10000;
        },function(){

        })
        mon.ab=ab.name;
        abilities.push(ab);
    })

    let EzCollectUpgradeIcon = loadImage('sprites/EzCollectUpgradeIcon.png');
    let BananaSalvageUpgradeIcon = loadImage('sprites/BananaSalvageUpgradeIcon.png');
    let MarketplaceUpgradeIcon = loadImage('sprites/MarketplaceUpgradeIcon.png');
    let CentralMarketUpgradeIcon = loadImage('sprites/CentralMarketUpgradeIcon.png');
    let MonkeyWallStreetUpgradeIcon = loadImage('sprites/MonkeyWallStreetUpgradeIcon.png');
    up[2][0] = new Upgrade("EZ Collect",EzCollectUpgradeIcon,"The collect radius of Bananas is larger. For Monkey Banks, glows when bank is full and ready to collect.",250,function(mon){
        mon.ez=1;
    })
    up[2][1] = new Upgrade("Banana Salvage",BananaSalvageUpgradeIcon,"Uncollected Bananas auto-collect for half the amount, and Banks autocollect when full.",200,function(mon){
        mon.ez=2;
        mon.dart.step = function(){
            if(this.j===undefined){this.j=0;}
            this.x+=cos(this.dir)*this.speed;
            this.y+=sin(this.dir)*this.speed;
            this.j++;
            if(this.j===this.d){
                this.step=function(){
                    this.lives--;
                    if(this.lives<=0){
                        earn(Math.round(this.dam/2));
                        towers[this.tower].damcont+=Math.round(this.dam/2);
                        bananes.splice(getbananeindex(this),1);
                    }
                }
            }
            this.lives--;
            if(this.lives<=0){
                earn(Math.round(this.dam/2));
                towers[this.tower].damcont+=Math.round(this.dam/2);
                bananes.splice(getbananeindex(this),1);
            }
        }
    })
    up[2][2] = new Upgrade("Marketplace",MarketplaceUpgradeIcon,"Generates money each round and adds it to your total. No fuss.",2900,function(mon){
        mon.max+=12;

        mon.shoot = function(){
            earn(this.dart.dam);
            this.damcont+=this.dart.dam/2;
        }
    })
    up[2][3] = new Upgrade("Central Market",CentralMarketUpgradeIcon,"Earns heaps of money each round and gives Merchantmen +10% income.",15000,function(mon) {
        mon.dart.dam *= 3.5
        let boo = new Boosts("Central Market",function(bo){
            let to = towers[gettowerindex(bo.tower)];
            to.mons=[];
            towers.forEach(function(a){
                if(a.tower.name==="boat"&&a.levels[2]>=3){
                    if(to.mons.length<10&&a.marc<10){
                        a.marc++;
                        to.mons.push(a);
                    }
                }
            })
        },function(bo){
            towers[gettowerindex(bo.tower)].mons.forEach(function(a){
                a.marc=0;
            })
        },mon)
        mon.bo = boo.name;
        boosts.push(boo);
    })
    up[2][4] = new Upgrade("Monkey Wall Street",MonkeyWallStreetUpgradeIcon,"Hub of Monkey trades earns colossal income each round.",60000,function(mon){
        mon.step = function(){
            if(this.round<yourround&&this.next>0){
                for(let i =0; i < this.next;i++){
                    this.shoot();
                }
            }
            if(this.round<yourround){
                earn(4000);
                this.next=this.max;
            }
            if(this.tempspeed >= this.speed) {
                if(this.next>0) {
                    this.shoot();
                    this.next--;
                    this.tempspeed -= this.speed;
                }
            } else {
                this.tempspeed++;
            }
            this.round = yourround;
        }
    })

    farm.shoot = function(b){
        let dart;
        do {
            let r = random(0, TWO_PI);
            let f = random(0, this.r);
            if(f%this.dart.speed!==0){
                f-=(f%this.dart.speed);
            }
            dart = new Dart(this.x, this.y, r, this.dart, this);
            dart.dx = this.x + cos(r) * f;
            dart.dy = this.y + sin(r) * f;
            dart.d = f/this.dart.speed;
        }while(dart.dx<0||dart.dx>1200||dart.dy<0||dart.dy>700);
        bananes.push(dart);
    }
    farm.init = function(mon){
        mon.max=4;
        mon.next=4;
        mon.round=yourround;
    }
    farm.step = function(){
        if(this.round<yourround&&this.next>0){
            for(let i =0; i < this.next;i++){
                this.shoot();
            }
        }
        if(this.round<yourround){
            this.next=this.max;
        }
        if(this.tempspeed >= this.speed) {
            if(this.next>0) {
                this.shoot();
                this.next--;
                this.tempspeed -= this.speed;
            }
        } else {
            this.tempspeed++;
        }
        this.round = yourround;
    }
    farm.levels=up;
    farm.description="A farm for $ with this you can collect money from trees";
    statictowers.push(farm);

    let facsprite = loadImage('sprites/monkey/spike factory.png');
    fac = new statictower("factory", 60, 60, 150, 120, facsprite,800,2,towertypes.support);
    fac.dart = new DartsContainer(2, damagetype.darts, 1,spikes[5],30,30,false,5);
    up = [[],[],[]];
    let BiggerStacksUpgradeIcon = loadImage('sprites/BiggerStacksUpgradeIcon.png');
    let WhiteHotSpikesUpgradeIcon = loadImage('sprites/WhiteHotSpikesUpgradeIcon.png');
    let FasterProductionUpgradeIcon = loadImage('sprites/FasterProductionUpgradeIcon.png');
    let EvenFasterProductionUpgradeIcon = loadImage('sprites/EvenFasterProductionUpgradeIcon.png');
    let LongReachUpgradeIcon = loadImage('sprites/LongReachUpgradeIcon.png');
    up[0][0] = new Upgrade("Bigger Stacks",BiggerStacksUpgradeIcon,"Creates larger piles of spikes per shot.",800,function(mon){mon.dart.sprite = spikes[10];mon.dart.lives = 10})
    up[0][1] = new Upgrade("White Hot Spikes",WhiteHotSpikesUpgradeIcon,"Cuts through Lead Bloons and Frozen Bloons.",600,function(mon){mon.dart.type = damagetype.fire})
    up[1][0] = new Upgrade("Faster Production",FasterProductionUpgradeIcon,"It allows the Spike Factory to produce spike piles 66% faster.",700,function(mon){mon.speed/=2})
    up[1][1] = new Upgrade("Even Faster Production",EvenFasterProductionUpgradeIcon,"Increases production rate even more.",900,function(mon){mon.speed-=int(mon.speed/4);})
    up[2][0] = new Upgrade("Long Reach",LongReachUpgradeIcon,"Increases range for spike pile drops, plus piles last longer.",150,function(mon){mon.r*=1.3;mon.pos = factpos(mon.x,mon.y,mon.r);})
    fac.draw = function(){
        image(facsprite,-this.w/2*sx,-this.h/2*sy,this.w*sx,this.h*sy);
    }

    fac.shoot = function (ballon) {

        if(this.pos === undefined){
            this.pos = factpos(this.x,this.y,this.r);
            this.who=0;
        }

        let x;
        let y;

        if(this.pos.length > 0) {
            let rand = round(random(0, this.pos.length - 1));
            x = this.pos[rand][0];
            y = this.pos[rand][1];
        } else {
            do{
                x = random(this.x-this.r,this.x+this.r);
                y = random(this.y-this.r,this.y+this.r);
            }while(dist(x,y,this.x,this.y) > this.r);
        }

        this.dir = getdir(this.x, this.y, x,y);

        let stack = new Dart(this.x, this.y, this.dir, this.dart,this);
        stack.destx = x;
        stack.desty = y;
        stack.id+=""+this.who;
        stack.draw = function(){
            if(this.lives <= 0){
                darts.splice(getdartsindex(this),1);
                return;
            }
            image(spikes[this.lives],this.x*sx-this.w/2*sx,this.y*sy-this.h/2*sy,this.w*sx,this.h*sy);
        }
        stack.step = function(){
            this.x += this.speed*cos(this.dir);
            this.y += this.speed*sin(this.dir);

            if(dist(this.x,this.y,this.destx,this.desty) < 1){
                this.step = function(){};
            }
        };
        darts.push(stack);
        this.who++;
    };
    fac.step = function(){
        if(this.tempspeed >= this.speed) {
            this.shooted++;
            if(this.shooted>=1000000000){this.shooted=0;}
            this.shoot();
            this.tempspeed-=this.speed;
        } else {
            this.tempspeed++;
        }
    }
    fac.levels=up;
    fac.description = "The spike factor for $\nPut spikes on the path";
    statictowers.push(fac);
}